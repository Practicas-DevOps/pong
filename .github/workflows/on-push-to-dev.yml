name: "Build Docker image & push to Docker Hub on push to develop branch"
on:
  push:
    branches:
      - develop
jobs:


  docker:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Semantic versioning
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          branch: develop
          tag_prefix: "v"
          debug: true

      - name: Save version number as environment variable
        run: echo "VERSION=${{ steps.semver.outputs.version_tag }}" >> $GITHUB_ENV


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }},${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:latest

      - name: Checkout to manifests repo
        uses: actions/checkout@v3
        with:
          repository: 'Practicas-DevOps/ping-pong-app'
          ref: 'main'
          token: ${{ secrets.PAT }}
      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r ./scripts/requirements.txt

      - name: Set Image Tag
        run: python ./scripts/set_tag.py -y ./application/overlays/dev/${{ env.REPO_NAME }}/kustomization.yaml -n ${{ env.VERSION }}

      - name: Commit and push changes
        run: |
          git add overlays/dev/${{ env.REPO_NAME }}/kustomization.yaml
          git commit -m "Update image tag to ${{ env.VERSION }}"
          git push